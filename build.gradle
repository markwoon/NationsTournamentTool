plugins {
  id 'java'
  id 'application'
  // javafx plugin must come before jlink plugin
  id 'org.openjfx.javafxplugin' version '0.0.9'
  id 'org.beryx.jlink' version '2.23.3'
  id 'org.javamodularity.moduleplugin' version '1.8.1'
}

sourceCompatibility = JavaVersion.VERSION_14
targetCompatibility = JavaVersion.VERSION_14

version = project.findProperty('version')
group = 'org.markwoon'



repositories {
  jcenter()
}

dependencies {
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
  implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'
  implementation group: 'org.apache.poi', name: 'poi', version: '5.0.0'
//  implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0'
//  implementation group: 'org.apache.poi', name: 'poi-ooxml-lite', version: '5.0.0'
  implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'
  implementation group: 'org.checkerframework', name: 'checker-qual', version: '3.10.0'
  implementation group: 'org.jsoup', name: 'jsoup', version: '1.13.1'
  implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

  testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.7.1'
}


javafx {
  version = "14"
  modules = [ 'javafx.controls', 'javafx.fxml']
}

application {
  mainModule    = 'org.markwoon.nations'
  mainClassName = 'org.markwoon.nations.TournamentTool'
}

test {
  moduleOptions {
    addExports = [
        "org.junit.platform.commons/org.junit.platform.commons.util": "ALL-UNNAMED",
        "org.junit.platform.commons/org.junit.platform.commons.logging": "ALL-UNNAMED"
    ]
  }

  useJUnitPlatform()
  testLogging {
    // set options for log level LIFECYCLE
    events 'passed', 'skipped', 'failed'
    exceptionFormat 'short'

    // remove standard output/error logging from --info builds
    // by assigning only 'failed' and 'skipped' events
    info.events = ['failed', 'skipped']

    // set options for log level DEBUG
    debug.events = ['started', 'passed', 'skipped', 'failed']
    debug.exceptionFormat = 'full'
  }
}

jlink {
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'TournamentTool'
    noConsole = true
  }
  jpackage {
    appVersion = version

    if (org.gradle.internal.os.OperatingSystem.current().windows) {
      installerType = 'msi'
      imageOptions = ['--icon', 'src/main/assets/marie_curie.ico']
      installerOptions = ['--win-menu', '--win-shortcut', '--win-upgrade-uuid', UUID.randomUUID().toString()]
    }
    if (org.gradle.internal.os.OperatingSystem.current().macOsX) {
      installerType = 'pkg'
      imageOptions = ['--icon', 'src/main/assets/marie_curie.icns']
    }
  }
}
